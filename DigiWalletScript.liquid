{% comment %} DIGIWALLET PAYMENT METHOD {% endcomment %}
{% if order.transactions[0].gateway == "DigiWallet" %}

{% assign digiWalletLogo = "https://www.digiwallet.bz/wp-content/uploads/2021/11/DigiWallet-Website_Logo.png" %}
{% assign username = "5012235128" %}
{% assign password = "000000" %}
{% assign phoneNumber = order.phone %}
{% assign orderAmount = order.total_price | money_without_currency %}

<style>
  .display-frame {
    display: flex;
    justify-content: center;
    margin-top: 20px;
  }

  .card {
    display: block;
    width: 100%;
    padding: 32px 16px;
    background-color: #ffffff;
    border-radius: 8px;
    border: 1px solid #d9d9d9;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .center-image {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 35%;
  }

  .center {
    display: flex;
    justify-content: center;
  }

  .form-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-top: 5px;
  }

  .form-input {
    border: 1px solid #ced4da;
    border-top-left-radius: 0.5rem;
    border-top-right-radius: 0.5rem;
    padding: 10px 1px 10px 12px;
    width: 100%;
    min-width: 250px;
    max-width: 300px;
  }

  input:focus {
    outline-width: 0;
    background-color: transparent;
  }

  .divider {
    border-right: 1px solid #ced4da;
    height: 24px;
    display: inline-block;
    position: absolute;
    margin-left: 2px;

  }

  .tel-input {
    display: inline-block;
    padding-left: 9px;
    border: none !important;
    border-color: transparent !important;
  }

  .veri-input {
    display: inline-block;
    padding-left: 9px;
    border: none !important;
    border-color: transparent !important;
  }

  .font {
    color: #374151;
    font-size: 1rem;
    line-height: 1.5rem;
  }

  p.font {
    text-align: center;
  }

  .errorMessage {
    display: none;
    margin-top: 6px;
    color: red;
    text-align: center;
  }

  .verification-button {
    color: #ffffff;
    background-color: #00ace5;
    padding: 10px 7px;
    border-bottom-left-radius: 0.5rem;
    border-bottom-right-radius: 0.5rem;
    width: 100%;
    min-width: 265px;
    max-width: 315px;
  }

  .verification-button:hover {
    background-color: #0088b5;
    transition: 0.4s;
  }

  .verification-button:active {
    background-color: #005c7a;
  }

  input:valid+span::after {
    position: absolute;
    content: "âœ“";
    padding-left: 30px;
    color: #009000;
  }

  /* Chrome, Safari, Edge, Opera */
  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type=number] {
    -moz-appearance: textfield;
  }

  .wrapper {
    margin: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .checkmark__circle {
    stroke-dasharray: 166;
    stroke-dashoffset: 166;
    stroke-width: 2;
    stroke-miterlimit: 10;
    stroke: #7ac142;
    fill: none;
    animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards
  }

  .checkmark {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    display: block;
    stroke-width: 2;
    stroke: #fff;
    stroke-miterlimit: 10;

    box-shadow: inset 0px 0px 0px #7ac142;
    animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both
  }

  .checkmark__check {
    transform-origin: 50% 50%;
    stroke-dasharray: 48;
    stroke-dashoffset: 48;
    animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards
  }

  @keyframes stroke {
    100% {
      stroke-dashoffset: 0
    }
  }

  @keyframes scale {

    0%,
    100% {
      transform: none
    }

    50% {
      transform: scale3d(1.1, 1.1, 1)
    }
  }

  @keyframes fill {
    100% {
      box-shadow: inset 0px 0px 0px 50px #7ac142
    }
  }
</style>

<div class="display-frame">
  <div class="card">
    <img class="center-image" src={{digiWalletLogo}} alt="DigiWallet Logo">

    <div id="telContainer">
      <br>
      <p class="font">Enter your DigiWallet phone number here</p>

      <!-- INPUT TELEPHONE NUMBER SECTION-->
      <div class="form-container">

        <div class="center">
          <div class="form-input">
            <span class="font">+501</span>
            <span class="divider"></span>
            <input class="tel-input font" type="tel" id="digiPhoneNumberField" pattern="[0-9]{3}-[0-9]{4}"
              placeholder="xxx-xxxx" maxlength="8" required>
            <span></span>
            <!-- Temporary Display to see if phone number is valid -->
          </div>
        </div>

        <div class="center">
          <button onclick="salesRequestMerchant()" class="verification-button" id="getVeriCode" type="submit">Get
            Verification Code</button>
        </div>

        <div class="errorMessage" id="errorMessageWrongNumber">
          <small>You've entered an invalid DigiWallet subscriber number.
            Please enter a valid mobile number</small>
        </div>

      </div>
    </div>


    <div id="veriContainer" style="display:none">
      <br>
      <p class="font">Enter the Authorization Code received via SMS</p>

      <!-- INPUT VERIFICATION CODE SECTION-->
      <div class="form-container">

        <div class="center">
          <div class="form-input">
            <input class="veri-input font" type="tel" id="authoizationInputField" placeholder="**********"
              maxlength="10" required>
          </div>
        </div>

        <div class="center">
          <button onclick="salesRequestExecToSelf()" class="verification-button" id="submitVeriCode"
            type="submit">Process Payment</button>
        </div>

        <div class="errorMessage" id="errorMessageWrongTAC">
          <small>You've entered an incorrect confirmation number.
            Please check the number and try again.</small>
        </div>

        <div class="errorMessage" id="errorMessageDupTAC">
          <small>The confirmation number has already been used.
            Please check the number and try again.</small>
        </div>

        <div class="errorMessage" id="errorMessageFunds">
          <small>Transaction Declined. Please check that you have sufficient funds and try again.</small>
        </div>

      </div>
    </div>

    <div id="successContainer" style="display:none">

      <!-- Payment Confirmed-->
      <div class="form-container">
        <div class="wrapper"> <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
            <circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" />
            <path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
          </svg>
        </div>
        <p class="font">Payment Successfully Processed</p>
      </div>
    </div>


  </div>
</div>


<script>

  // Adds dash to fourth character in the input field
  var tele = document.getElementById('digiPhoneNumberField');
  tele.addEventListener('keyup', function (e) {
    if (event.key != 'Backspace' && (tele.value.length === 3)) {
      tele.value += '-';
    }
  });

  // gets the user inputed telephone number, formats it and generates XML content to be
  // sent to an API call. We then look at the <result> tag to do the appropriate action
  function salesRequestMerchant() {
    var digiPhoneNumber = document.getElementById('digiPhoneNumberField').value;
    var digiPhoneNumber = digiPhoneNumber.replace('-', '');
    var digiPhoneNumber = '501' + digiPhoneNumber;

    const xmlBody = '<?xml version="1.0"?><TCSRequest>' + '<UserName>{{ username }}</UserName>' + '<TerminalType>API</TerminalType>' + '<Password>{{ password }}</Password>' + '<Function name="SALESREQUESTMERCHANT">' + '<Param1>947</Param1>' + '<Param2>{{orderAmount}}</Param2>' + '<Param4>' + digiPhoneNumber + '</Param4>' + '<Param6>5012235128</Param6>' + '</Function>' + '</TCSRequest>';

    // xml response returned here from API call
    // var xmlResponse = doFetch(xmlBody);

    var response = '<?xml version="1.0" ?><TCSReply><Result>0</Result><Message>Target account found, id = 6861 group = 11 balance = 0.0</Message><param1>1174</param1><param2>2.21000</param2><param3>2.21000</param3><param4>0.00000</param4><param5>0.00000</param5><param6>0.00000</param6><param7>0.00000</param7><param8>-0.02000</param8><param9>0.00000</param9><param10>0.00000</param10><param11>0.00000</param11><param15>2.21000</param15></TCSReply>';
    var badResponse = '<?xml version="1.0" ?><TCSReply><Result>100512</Result><Message>Transaction declined. You\'ve entered an invalid DigiWallet subscriber number. Please enter valid mobile number.</Message></TCSReply>';
    parser = new DOMParser();
    xmlDoc = parser.parseFromString(response, "text/xml");

    var result = xmlDoc.getElementsByTagName("Result")[0].childNodes[0].nodeValue;

    if (result == 0) {
      displayTAC();
    } else if (result == 100508) {
      invalidSubscriberNumber();
    }

  }

  // Get the authorization code from the TAC input field, generates XML content which will be sent to API
  // We then look at the <result> tag to do the appropriate action
  function salesRequestExecToSelf() {

    var authoizationCode = document.getElementById('authoizationInputField').value;

    console.log('TAC:' + authoizationCode);

    const xmlBody = '';

    var response = '';
    var badResponse = '<?xml version="1.0" ?><TCSReply><Result>0</Result><Message>Youve entered an incorrect confirmation number, please check the number and try again.</Message></TCSReply>';
    parser = new DOMParser();
    xmlDoc = parser.parseFromString(badResponse, "text/xml");

    var result = xmlDoc.getElementsByTagName("Result")[0].childNodes[0].nodeValue;

    if (result == 0) {
      displayPaymentSuccess();
    }
    else if (result == 100512) {
      invalidTAC();
    } else if (result == 100513) {
      duplicatedTAC();
    } else if (result == 100702) {
      limitedFunds();
    }

  }

  // POST API Request, the response is parsed into an XML object and returned
  // 
  // @Param content - XML content to be sent
  function doFetch(content) {
    fetch('http://190.197.36.93:6060/Telepin', {
      method: 'POST',
      headers: {
        'Accept': '*/*',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Content-Type': 'text/xml'
      },
      body: content
    }).then(response => {
      parser = new DOMParser();
      xmlDoc = parser.parseFromString(response, "text/xml");
      return xmlDoc;
    }).catch(error => console.log('POST REQUEST FAILED:', error));
  }

  // Hides Telephone Input Page and displays Code Verification Page where use 
  // will be prompted to enter TAC and complete payment process
  function displayTAC() {
    var x = document.getElementById("telContainer");
    var y = document.getElementById("veriContainer");
    x.style.display = "none";
    y.style.display = "block";
  }

  function displayPaymentSuccess() {
    var x = document.getElementById("veriContainer");
    var y = document.getElementById("successContainer");
    x.style.display = "none";
    y.style.display = "block";
  }

  // Displays error message
  function invalidSubscriberNumber() {
    var z = document.getElementById("errorMessageWrongNumber");
    z.style.display = "block";

    // clear telephone form code here
    document.getElementById("digiPhoneNumberField").value = '';
  }

  function invalidTAC() {
    var z = document.getElementById("errorMessageWrongTAC");
    z.style.display = "block";

    // clear TAC input field
    document.getElementById("authoizationInputField").value = '';
  }

  function duplicatedTAC() {
    var z = document.getElementById("errorMessageDupTAC");
    z.style.display = "block";

    // clear TAC input field
    document.getElementById("authoizationInputField").value = '';
  }

  function limitedFunds() {
    var z = document.getElementById("errorMessageFunds");
    z.style.display = "block";

    // clear TAC input field
    document.getElementById("authoizationInputField").value = '';
  }

</script>

{% endif %}

{% comment %} E-KYASH PAYMENT METHOD {% endcomment %}
{% if order.transactions[0].gateway == "E-Kyash" %}
<h1>Ekyash</h1>
{% endif %}

{% comment %} CREDIT CARD PAYMENT METHOD {% endcomment %}
{% if order.transactions[0].gateway == "Credit Card" %}
<h2>Credit Card</h2>
{% endif %}